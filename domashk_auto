


import os
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service as ChromeService
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# --------- Настройки (замени START_URL на нужный) ----------
START_URL = "https://example.com"   # <-- поменяй на нужный сайт
SCREENSHOT_DIR = "screenshots"
EXPLICIT_TIMEOUT = 10               # сколько секунд ждать элементов

os.makedirs(SCREENSHOT_DIR, exist_ok=True)

def create_driver(headless: bool = False) -> webdriver.Chrome:
    """
    Создает и возвращает экземпляр Chrome WebDriver.
    webdriver-manager автоматически скачивает подходящий chromedriver.
    headless=True запускает браузер без окна (полезно в CI).
    """
    options = webdriver.ChromeOptions()
    options.add_argument("--start-maximized")     # открываем окно на весь экран
    # options.add_argument("--disable-extensions") # опционально
    if headless:
        # "--headless=new" рекомендуется для современных версий Selenium/Chrome
        options.add_argument("--headless=new")
        options.add_argument("--window-size=1920,1080")

    driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=options)
    return driver

def wait_for_page_body(driver, timeout=EXPLICIT_TIMEOUT):
    """
    Явное ожидание: ждем, пока элемент <body> появится в DOM и станет видимым.
    Это простой маркер того, что страница загрузилась (хотя иногда страницы динамические).
    """
    WebDriverWait(driver, timeout).until(EC.visibility_of_element_located((By.TAG_NAME, "body")))

def take_screenshot(driver, name_prefix="page"):
    """
    Делает скриншот и сохраняет в папку screenshots.
    Возвращает путь к файлу.
    """
    ts = int(time.time())
    path = os.path.join(SCREENSHOT_DIR, f"{name_prefix}_{ts}.png")
    driver.save_screenshot(path)
    return path

def main():
    driver = None
    try:
        # 1) Создаём драйвер (локально: headless=False, чтобы видеть окно)
        driver = create_driver(headless=False)

        # 2) Открываем стартовый URL
        print(f"Открываем {START_URL} ...")
        driver.get(START_URL)

        # 3) Ждём появления <body> — простая проверка загрузки страницы
        wait_for_page_body(driver, timeout=EXPLICIT_TIMEOUT)
        print("Страница загружена (тег <body> найден).")

        # 4) Делаем скриншот для подтверждения
        ss = take_screenshot(driver, "open_site")
        print(f"Скриншот сохранён: {ss}")

        # 5) Небольшая пауза (чтобы успеть увидеть окно в локальном режиме)
        #    (Можно убрать — здесь для удобства при ручном запуске)
        time.sleep(1)

    except Exception as e:
        print("Произошла ошибка:", e)
    finally:
        if driver:
            print("Закрываем браузер...")
            driver.quit()

if __name__ == "__main__":
    main()
